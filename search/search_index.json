{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SyntaxScribe","text":"<p>Generate clean, Markdown-based documentation for TypeScript, JavaScript, and Vue projects\u2014automatically.</p> <ul> <li>No more manual README writing</li> <li>CLI-first, plug-and-play</li> <li>Output ready for MkDocs or GitHub Pages</li> </ul> <p>Get Started \u2192</p>"},{"location":"getting-started/","title":"Getting Started","text":""},{"location":"guides/","title":"Guides","text":"<p>Deploy mkdocs to GitHub Pages \u2192</p>"},{"location":"license/","title":"\ud83d\udee1\ufe0f End User License Agreement (EULA)","text":"<p>This End User License Agreement (\"Agreement\") is entered into between you (\"Licensee\") and Patrick Wright (\"Licensor\").</p> <p>By installing, copying, or otherwise using the SyntaxScribe software (\"Software\"), you agree to be bound by the terms of this Agreement.</p>"},{"location":"license/#1-license-grant","title":"1. \ud83d\udcdc License Grant","text":"<p>Licensor grants Licensee a non-exclusive, non-transferable, revocable license to install and use the Software for personal or internal business purposes.</p>"},{"location":"license/#2-restrictions","title":"2. \ud83d\udeab Restrictions","text":"<p>Licensee may not:</p> <ul> <li>Modify, reverse engineer, decompile, or disassemble the Software  </li> <li>Sell, redistribute, or sublicense the Software without prior written consent  </li> <li>Use the Software to provide commercial hosting services or SaaS without a separate license agreement  </li> </ul>"},{"location":"license/#3-ownership","title":"3. \ud83d\udd12 Ownership","text":"<p>The Software is licensed, not sold. Licensor retains all rights, title, and interest in the Software.</p>"},{"location":"license/#4-no-warranty","title":"4. \u26a0\ufe0f No Warranty","text":"<p>The Software is provided \"as is\", without warranty of any kind. Licensor is not liable for any damages arising from the use or inability to use the Software.</p>"},{"location":"license/#5-termination","title":"5. \u26d4 Termination","text":"<p>This Agreement remains in effect until terminated. It will automatically terminate without notice if the Licensee breaches any term of this Agreement.</p>"},{"location":"license/#6-governing-law","title":"6. \u2696\ufe0f Governing Law","text":"<p>This Agreement shall be governed by and construed under the laws of the United States and the State of Virginia.</p> <p>\u00a9 2025 Patrick Wright. All rights reserved.</p>"},{"location":"guides/mkdocs-deploy-guide/","title":"\u2705 How to Deploy MkDocs to GitHub Pages","text":""},{"location":"guides/mkdocs-deploy-guide/#1-prerequisites","title":"\u2705 1. Prerequisites","text":"<p>Make sure you have the following:</p> <ol> <li>A GitHub repo (e.g., <code>my-repo</code>) containing your MkDocs project  </li> <li>A <code>mkdocs.yml</code> configuration file  </li> <li>Your documentation is in the default <code>/docs</code> folder  </li> </ol>"},{"location":"guides/mkdocs-deploy-guide/#2-optional-but-recommended-update-mkdocsyml","title":"\u2705 2. (Optional but Recommended) Update <code>mkdocs.yml</code>","text":"<p>Add or update the following settings:</p> <pre><code>site_name: My Project\nsite_url: https://&lt;your-username&gt;.github.io/&lt;your-repo&gt;/\n</code></pre> <p>This helps MkDocs generate correct links in your site.</p>"},{"location":"guides/mkdocs-deploy-guide/#3-create-a-python-virtual-environment","title":"\u2705 3. Create a Python Virtual Environment","text":"<pre><code>python3 -m venv .venv\n</code></pre>"},{"location":"guides/mkdocs-deploy-guide/#4-activate-the-virtual-environment","title":"\u2705 4. Activate the Virtual Environment","text":"<pre><code>source .venv/bin/activate\n</code></pre> <p>Your prompt will change to indicate you're in the <code>.venv</code> environment.</p>"},{"location":"guides/mkdocs-deploy-guide/#5-install-mkdocs-and-the-material-theme","title":"\u2705 5. Install MkDocs and the Material Theme","text":"<pre><code>pip install mkdocs mkdocs-material\n</code></pre> <p>You can add more plugins later as needed.</p>"},{"location":"guides/mkdocs-deploy-guide/#6-create-a-gitignore-file","title":"\u2705 6. Create a <code>.gitignore</code> File","text":"<pre><code># MkDocs build output\n/site/\n\n# Python virtual environment\n.venv/\n\n# Python cache\n__pycache__/\n*.py[cod]\n*.pyo\n*.pyd\n\n# Editor files\n.vscode/\n.idea/\n*.swp\n*~\n\n# macOS files\n.DS_Store\n\n# Logs and misc\n*.log\n</code></pre>"},{"location":"guides/mkdocs-deploy-guide/#7-preview-your-site-locally","title":"\u2705 7. Preview Your Site Locally","text":"<pre><code>mkdocs serve\n</code></pre> <p>Open your browser at http://127.0.0.1:8000 to preview your docs.</p>"},{"location":"guides/mkdocs-deploy-guide/#8-deploy-to-github-pages","title":"\u2705 8. Deploy to GitHub Pages","text":"<pre><code>mkdocs gh-deploy --clean\n</code></pre> <p>This command will: - Build your site - Push the contents to the <code>gh-pages</code> branch - Clean out old files</p>"},{"location":"guides/mkdocs-deploy-guide/#what-does-mkdocs-gh-deploy-do","title":"\ud83d\udee0\ufe0f What Does <code>mkdocs gh-deploy</code> Do?","text":"<p>Default behavior: - Uses the <code>origin</code> remote - Assumes you're deploying from the current repo - Cleans the <code>gh-pages</code> branch to remove stale files - Commits a message like: <code>Deployed {timestamp} with MkDocs {version}</code></p> <p>Optional flags: - <code>--clean</code> \u2013 remove old files before deploying - <code>--message \"Custom commit message\"</code> \u2013 use a custom commit message - <code>--remote-name origin</code> \u2013 use a different remote - <code>--branch gh-pages</code> \u2013 deploy to a different branch</p> <p>\u26a0\ufe0f Important: - It overwrites the <code>gh-pages</code> branch - You must have write access to the repo - For private repos, set up authentication (e.g., via a GitHub token)</p>"},{"location":"guides/use-github-actions-to-deploy-to-github-pages/","title":"ddd","text":"<ol> <li>Generate a Personal Access Token Go to  https://github.com/settings/personal-access-tokens and create a classic token with:</li> </ol> <p>the repo check box checked</p> <p>Expiration: Choose your preference (30 days or more)</p> <ol> <li>Add the PAT as a GitHub Secret Go to your repo \u2192 Settings \u2192 Secrets and variables \u2192 Actions \u2192 New repository secret:</li> </ol> <p>Name: GH_DEPLOY_TOKEN</p> <p>Value: (paste your PAT)</p> <p>create the workflow in <code>.github/workflows/deploy.yml</code>: <pre><code>name: Deploy MkDocs to GitHub Pages\n\non:\n  push:\n    branches: [ main ]\n  pull_request:\n    branches: [ main ]\n\npermissions:\n  contents: write\n  pages: write\n  id-token: write\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n    - uses: actions/checkout@v4\n      with:\n        fetch-depth: 0\n\n    - name: Setup Python\n      uses: actions/setup-python@v4\n      with:\n        python-version: '3.x'\n\n    - name: Install dependencies\n      run: |\n        pip install mkdocs mkdocs-material\n\n    - name: Deploy to GitHub Pages\n      run: |\n        git config --global user.name 'github-actions[bot]'\n        git config --global user.email 'github-actions[bot]@users.noreply.github.com'\n        mkdocs gh-deploy --clean --force\n</code></pre></p>"}]}